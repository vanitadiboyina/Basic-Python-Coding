1 #Add Two Numbers
#Given two numbers num1 and num2. 
The task is to write a Python program to find the addition of these two numbers.

n=int(input())
m=int(input())
print(m+n)


2 #How much profit?
Write a program to print the profit, given cost price and selling price.
A negative value of profit means loss.


costPrice = int(input())
sellPrice = int(input())
profit = sellPrice-costPrice
print(profit)


3 #Greater of two numbers.
Write a program to find the greater of two numbers stored in variables.

a = int(input()) 
b = int(input())
print(max(a, b)) # if a>b ?a:b


4 #Negative, positive or zero.
Write a program to check whether a number is negative, positive or zero.
Print out “negative”, “positive”, or “zero”.

n=int(input())
if n>0:
    print("positive")
elif n<0:
    print("negative")
else:
    print("zero")
    
    
 5 #Yes it is divisible by 5 & 11.
Write a program that prints “YES” if a number is divisible by both 5 and 11, and prints “NO” otherwise.

n=int(input())
if n%5==0 and n%11==0:
    print("YES")
else:
    print("NO")
    
    
  6 #Write a program which takes a month (a number) as input and prints the number of days in that month.
For example:
a. For month=1 print “31 days”
b. For month=2 print “28 days”


n=int(input())
if n==1 or n==3 or n==5 or n==7 or n==8 or n==10 or n==12:
    print("31 days")
elif n==4 or n==6 or n==9 or n==11:
    print("30 days")
elif n==2:
    print("28 days")
else:
    print("month does not exist")
    

7 #Greatest of three numbers.
Write a program to find the greatest of three numbers stored in variables.

n1=int(input())
n2=int(input())
n3=int(input())
if n1>n2 and n1>n3:
    print(n1)
elif n2>n1 and n2>n3:
    print(n2)
else:
    print(n3)
    
    
8 #Can you form a triangle?
Write a program to check if a triangle can be formed using the given lengths of 3 sides.
For example, if the sides are 10, 24, and 67, then you cannot make a triangle because 10+24
is not greater than 67.

n1=int(input())
n2=int(input())
n3=int(input())
if (n1+n2)>=n3 and (n2+n3)>=n1 and (n1+n3)>=n2:
    print("Yes")
else:
    print("No")
    


9 #Type of triangle.
Write a program to check whether the triangle is an equilateral, isosceles or scalene triangle.
Equilateral triangle has all 3 sides equal.
Isosceles triangle has 2 sides equal.
Scalene triangle has no side equal.


n1=int(input())
n2=int(input())
n3=int(input())
if n1==n2==n3:
    print("equilateral")
elif n1==n2 or n2==n3 or n1==n3:
    print("isosceles")
else:
    print("scalene")
    
    
    
 10 #A simple calculator.
Write a program that works as a simple calculator. It reads two integers (A and B) and a character (Ch).

1. If the character is +, the sum is printed. 
2. If it is -, the difference is printed. 
3. If it is *, the product is printed. 
4. If it is /, the quotient is printed. 
5. If it is %, the remainder is printed. 

Write code to achieve above functionality.



A=int(input())
B=int(input())
c=input()
if c=="+":
    print(A+B)
elif c=="-":
    print(A-B)
elif c=="*":
    print(A*B)
elif c=="/":
    print(int(A/B))
elif c=="%":
    print(A%B)
    
    
    
    
    
11 #Is it a leap year?
Take as input N, a Year (A number).
Write a program to check whether N is a leap year or not. If it is, print "YES". Otherwise print "NO".


n=int(input())
if (n%4==0 and n%100!=0) or n%400==0:
    print("YES")
else:
    print("NO")



12 #Natural numbers in reverse.
Write a program to print all natural numbers in reverse between X and Y inclusive.

x=int(input())
y=int(input())
while y>=x:
    print(y)
    y-=1
    
    
    
13 #Multiplication table.
Write a program to print multiplication table (up to 10) of any number saved in variable X.
Print the full expression on each line. Ex: “3 * 10 = 30”.
5 * 1 = 5
5 * 2 = 10
5 * 3 = 15
5 * 4 = 20
5 * 5 = 25
5 * 6 = 30
5 * 7 = 35
5 * 8 = 40
5 * 9 = 45
5 * 10 = 50

n=int(input())
for i in range(1,11):
    print(n ,"*",i,"=",n*i )
    
    
    
 15 #What is the total sum?
Write a program to find the sum of all natural numbers between X and Y inclusive.


x=int(input())
y=int(input())
sum=0
for i in range(x,y+1):
    sum+=i
print(sum)




16 #Sum of even numbers.
Write a program to find the sum of all even numbers between X and Y inclusive.


x=int(input())
y=int(input())
s=0
for i in range(x,y+1):
    if i%2==0:
        s+=i
print(s)
        
        

17 #How many odds?
Write a program to print number of all odd numbers between X and Y inclusive.


x=int(input())
y=int(input())
c=0
for i in range(x,y+1):
    if i%2!=0:
        c+=1
print(c)
    
    
    
    
    
18 #How many natural numbers?
Write a program to print number of all natural numbers between X and Y (both exclusive).

x=int(input())
y=int(input())
c=0
for i in range(x+1,y):
    c+=1
print(c)



19 #Find factorial.
Given an integer X, find its factorial. (Factorial of 7 = 7! = 7 x 6 x 5 x 4 x 3 x 2 x 1)


n=int(input())
fact=1
for i in range(1,n+1):
    fact=fact*i
print(fact)



20 #Find exponent value.
Given two integers X and Y, find the value of X raised to power Y. Ex: X = 2, Y = 4 will give 16.


x=int(input())
y=int(input())
exp=1
for i in range(y):
    exp=exp*x
print(exp)# print(x**y)



21 #Right angled triangle.
Write a program to print the following triangle using for-loop.

*
**
***
****
*****


n=int(input())
for i in range(1,n+1):
    print("*" * i)
    
    or
    
 n=int(input())
for i in range(1,n+1):
    for j in range(i):
        print("*",end="")
    print(end="\n")
   
   
   or
   
for i in range(1,6):
 s=""
 for j in range(i):
  s+="*"
 print(s)



22 #REVERSING NUM
num=1453
while num!=0:
   digit=num%10
   num=num//10
   print(digit,end="")
   
   
   or 
   
   
num=1234
result=0
while num!=0:
    digit=num%10
    num=num//10
    result*=10
    result+=digit
print(result)
    
23 #Sum of odd & even digits.
Take X as input. Print the sum of its odd placed digits and sum of its even placed digits.


n=input()
s=list(n)
e=0
O=0
for i in range(len(s)):
    if i%2==0:
        e+=int(s[i])
    else:
        O+=int(s[i])
print(e)
print(O)



24 # FIBONACCI NUMBER
n=23
a=0
b=1
c=a+b
while c<n:
    print(c)
    a=b
    b=c
    c=a+b
    
25 print the fibonacci number at a given index number . nth fibonacci number

i=8 #index
a=0
b=1
for x in range(i-1):
   c=a+b
   a=b
   b=c
print(c)
    



########  FUNCTIONS ####

def(x): 
  y=2*x
  print(y)
def(5)


def hello():
    print("HEllo")
    print("Hrllo"*count)
hello()


def hello(count):
    print("Hrllo"*count)
hello(3)

def hello(name):
    print("Hrllo"+ name)
hello("grace vani")



26 ##What's the temperature?
Write a function that takes as input a Fahrenheit value and returns the corresponding Celsius value.
Use the formula C = (5/9)(F – 32). Make sure you are not doing "integer division".



def tem(f):
    c=5/9 * (f-32)
    return int(c)

f=int(input())
print(tem(f))



27 ###Is character uppercase?
Take as input a character Ch (eg: ‘g’, ‘h’, ‘A’, ‘5’, ‘+’).
Write a function that returns Yes if the character is uppercase and No otherwise.
Print the value returned.


n=input()
a=n.isupper()
if a==True:
    print("Yes")
else:
    print("No")



28 Count digits.
Take as input the following:
a. A number (eg: 31416) - X
b. A digit (eg: 1) - D
Write a function that returns the number of times the digit (D) is found in the number (X).
Eg: 1 is found 2 times in 31416. Print the value returned.

Hint: To get last digit of 1234, you can get its remainder when divided by 10... (1234 % 10 = 4).
Now divide 1234 by 10 to get 123 (integer division).


def count(n,d):
    l=list(n)
    c=0
    for i in l:
        if i==d:
            c+=1
    return c
n=input()
d=input()
print(count(n,d))



29 Fahr Celsius table.
Write a function that takes as input 3 values:

a. Start - This represents the starting Fahrenheit value
b. End - This represents the ending Fahrenheit value
c. Step - This represents the increment you need to make after each value

Now run a loop from Start to End, increasing the value by Step each time.
Each value in the loop represents a Fahrenheit value that you have to convert into Celsius.
You can use the function you had created in 'What's the temperature?' question to do the conversion from F to C.
Print as output the following table, with Fahrenheit values in left column and Celsius values in the right column.
E.g.: For an input of 0 (Start), 100 (End) and 20 (Step) the output is:

0 : -17
20 : -6
40 : 4
60 : 15
80 : 26
100 : 37


s=int(input())
e=int(input())
step=int(input())
while s<=e:
    c=5/9 *(s-32)
    print(s , ":", int(c))
    s+=step




30 ##power of a number

n1=int(input())
n2=int(input())
print(n1**n2)

31 ###Is it a Prime number?
Take as input a number N. Write a function that returns Yes if N is prime, and No otherwise.

n=int(input())
flag=True
for i in range(2,int(n**0.5 )+ 1):
    if n%i==0:
        flag=False
        break
if flag==True:
    print("Yes")
else:
    print("No")
    
    
    
    
    OR  
    
    
  int isprime(unsigned longx)
 {
   if(x==2 || x==3)return 1;
   if(x%2==0 || x%3==0||x==1)return 0;
   for(unsigned long i=5; i*i<=x;i+=6)
   {
   if (x%i==0 || x%(i+2)==0)return 0;
   return 1
   }
 }


32 ###How many prime numbers?
Write a program to print number of all Prime numbers between X and Y inclusive.

def isprime(num):
    for i in range(2,int(num**0.5)+1):
        if num%i==0:
            return False
    return True

s=int(input())
e=int(input())
count=0
for i in range(s+1,e):
    if isprime(i):
        count+=1
print(count)





33 ####Print prime numbers.
Take X as input. Print all prime numbers from 2 to X (inclusive).


def isprime(num):
    for i in range(2,int(num**0.5)+1):
        if num%i==0:
            return False
    return True

n=int(input())
for i in range(2,n+1):
    if isprime(i):
        print(i)







34 ###GCD (HCF) of two numbers.
Take as input two numbers X and Y. Write a function which calculates and returns the GCD of X & Y.
Print the value returned.
You can use Euclidean algorithm. GCD(a, b) = GCD(a, b % a) where b > a.




def hcf(a,b):
    while a!=0 and b!=0:
        if b>a:
            b=int(b%a)
        else:
            a=int(a%b)
    return a+b

a=int(input())
b=int(input())
print(hcf(a,b))




35. ## LCM of two numbers.
Take as input two numbers X and Y. Write a function which calculates and returns the LCM of X & Y.
Print the value returned.
Remember, X * Y = GCD(X, Y) * LCM(X, Y).


def hcf(a,b):
    while a!=0 and b!=0:
        if b>a:
            b=int(b%a)
        else:
            a=int(a%b)
    if a==0:
        return b
    else:
        return a

def lcm(a,b):
    return int(a*b / hcf(a,b))


a=int(input())
b=int(input())
print(lcm(a,b))




36 ### SQUARE ROOT

def squareroot(n):
    return int(n**0.5)


n=int(input())
print(squareroot(n))


OR 
 import math
 n=int(inpur())
 print(math.sqrt(n))
 
 OR
 def sqrt(num):
     left=0
    right=0
    mid=(left+right)/2
    sq=mid*mid
    while abs(sq-num)>0.000001:   ##sq!=num
       if sq<num:
          left=mid
       else:
           right=mid
       mid=(left+right)/2
       sq=mid*mid
    return mid
 print(sqrt(100))

 
 or   
 
 ##to round the decimal digits to  3'
 import math    
    
n=int(input())
x=(math.sqrt(n))
print(round(x,3))

 
 
 
 37. ###Find logarithm (integer constraint)
Take as input two numbers X and N.
Write a function which calculates and returns the 'Log to the base (n) of (x)'.
Print the value returned. Assume that values of X and N are such that the result is going to be a whole number


def log(x,b):
   count=0
   while x>1:
      x=x/b
      count+=1
   return count
x=int(input())
b=int(input())
print(log(x,b))  #works for only integer digits of a number


#below code works for decimal

def log(x,b):
     left=0
     right=x
     mid=(left+right)/2
     inter=b**mid
     while abs(inter-x)>1e-12:
           if inter<x:
               left=mid
           else:
               right=mid
           mid=(left+right)/2
           inter=b**mid
     return mid
     
x=int(input())
b=int(input())
r=(log(x,b))
print(round(r,1))






38 ##Is it Armstrong?
Take as input a number X. Write a function which returns Yes if X is an Armstrong number and No otherwise.
Print the value returned. An example of Armstrong number is 371 because 371 = 3ˆ3 + 7ˆ3 + 1ˆ3.

Look up the definition of Armstrong numbers as well.

def Armstrong(num):
   total=0
   original=num
   while num!=0:
       digit=num%10
       num//=10
       total+=digit ** 3
    return total==original
 
n=int(input())  
 if Armstrong(n):
    print("Yes")
else:
    print("No")
 
 
 39 #Print Armstrong numbers.
Take as input two numbers X and Y.
Write a function to print all Armstrong numbers between X and Y (inclusive).


def Armstrong(num):
   total=0
   x=len(str(num))
   original=num
   while num!=0:
       digit=num%10
       num//=10
       total+=digit ** x
   return total==original


def printAmrstrong(l,u):
   for i in range(l,u+1):
       if Armstrong(i):
          print(i)
l=int(input())
u=int(input())
printAmrstrong(l,u) 




40..  ###Pascal's triangle.
Take X (number of rows) as input. Print the following pattern (for X = 6).

1
1 1
1 2 1
1 3 3 1
1 4 6 4 1
1 5 10 10 5 1

This is Pascal’s triangle. Each item is a Binomial coefficient.



from math import factorial
n= int(input())

for i in range(n):
    for j in range(n-i+1):
         #left spacing
         print(end=" ")
    for j in range(i+1):
        # nCr = n!/((n-r)!*r!)
        print(factorial(i)//(factorial(j)*factorial(i-j)), end=" ")
  
    # for new line
    print()




$$$$$$$$$$$$$$$$ LAMBDA fUNCTION $$$$$$$$$$$$$$$$$$$

double=lambda x: 2**x
print(double(5))

square=lambda a: a*a
print(square(5))


multiply=lambda x,y:x*y
print(multiply(2,3))






$$$$$$$$JSON  javascript object notation --- web API(google maps, uber  , cred card etc)


$$$$$$$$slicing list $$$$$$$$$$$
funds=[100,200, 50,56,78]
funds[1:3]=[1,2,3]
funds[3:5]=[23,45]
print(funds)

output:  [100,1,2,3,23,45]


built in methods:

    .append(value)
    .insert(index,value) elements will be shifted to next index from that index
    .pop()removes last element
    .pop(index)
    .remove(value)#if that value present ,ultiple times . then it deletes the first occured element
    .count(value)#no.of occurrences
    .index(value)gives first index when multiple elements with that value
    len(listname)
    max(listname)
    min(listname)
    sum(listname)
    
  print([1,2,3]+[4,5,6])= [1,2,3,4,5,6]
  
  
  %%%%%%%%%%    enumeration %%%%%%%%
   for i,v in enumerate(funds):
      print(i,v)
    
    
    
    
    41. ##Maximum value in the array.
Take as input N, the size of an array. Take N more inputs and store them into the array.
Write a function which returns the maximum value in the array. Print the value returned.



n=int(input())
l=[]
for i in range(n):
    x=int(input())
    l.append(x)
print(max(l))





42  ###Search number.
Take as input N, the size of an array. Take N more inputs and store that in the array. Take as input a number M.
Write a function which returns the index on which M is found in the array. In case M is not found -1 is returned.
Print the value returned. Assume that all elements are distinct.


n=int(input())
l=[]
for i in range(n):
    x=int(input())
    l.append(x)
s=int(input())
flag=-1
for i in range(len(l)):
    if l[i]==s:
        flag=i
print(flag)



43 ###Division by 4.
Take as input N, the size of an array. Take N more inputs and store that in an array.

Write a function that updates each element of the array with the value obtained by dividing the
element by 4 (take only integer part).
If the value obtained by dividing element by 4 comes out to be 0, then update element with the value -1.
Print the elements of the array.

Note: Do not create a new array. Just update the given array.




n=int(input())
l=[]
for i in range(n):
    x=int(input())
    l.append(x)
for i in range(n):
    v=int(l[i]/4)
    if v==0:
        l[i]=-1
    else:
        l[i]=v
    print(l[i],end=" ")
    
    
    
    
    
    
    
    
    44 ###Find the duplicate.
Take as input N, the size of an array. Take N more inputs and store them into the array.
Inputs must contain numbers from 0 to N - 2.

Each number is present at least once.
That is, if N = 5, numbers from 0 to 3 are present in the given array at least once and one number is present twice.

You need to find and return that duplicate number present in the array.
Assume that the duplicate number is always present in the array.
    
    
    
    
 from collections import Counter


n=int(input())
l=[]
for i in range(n):
    x=int(input())
    l.append(x)

d=Counter(l)
for i in range(n):
    if d[i]==2:
        print(i)
        
        
        
        
        
        
   45 ### Special sum of array.
Take as input N, the size of an array. Take N more inputs and store them into the array.
You need to find the sum of all elements of the array.

If the sum has more than 1 digits, add the digits to get a single digit.
The final sum must be a single-digit number. Print the value returned.


def digsum(tot):
    if tot==0:
        return 0
    if tot%9==0:
        return 9
    else:
        return tot%9

n=int(input())
l=[]
tot=0
for i in range(n):
    x=int(input())
    tot+=x
    l.append(x)
    
print(digsum(tot))



    
46 . ###  Sum of two arrays.
Take as input N, the size of an array. Take N more inputs and store that in the array.
Take as input M, the size of the second array and take M more inputs and store that in the second array.
Write a function that returns the sum of two arrays, similar to the sum of 2 numbers.
E.g.:
     [1, 0, 2, 9]
+ [3, 4, 5, 6, 7]
----------------------
   [3, 5, 5, 9, 6]
   
   
   
   n=int(input())
l1=[]
for i in range(n):
    x=int(input())
    l1.append(x)
m=int(input())
l2=[]
for i in range(m):
    y=int(input())
    l2.append(y)
l1=''.join(map(str,l1))
l2=''.join(map(str,l2))
l3=int(l1)+int(l2)
digits = [int(x) for x in str(l3)]
s=" "
print(s.join(map(str,digits)))




$$$$$$$$ list comprehension $$$$$$$$
   r=[x**2 for x in range(1,6)]
     r=[2 for i in range(1,6)]
     r=[[2] for i in range(1,6)]
    r=[x**2 for x in range(1,6) if x>2]
    
    
    
 $$$$$$$$ difference b/w tuple and list$$$$$$
  cannot change the values in tuple.but can in list.
  tuple-immutable
  list-mutable
  
  
  
  tup1=(1) it prints only 1 .withpout brackets causse it thniks some mathematical calculations are happening
  tup1=(1,) now it prints with barckets
  
  print((1,2)==(1,2))   TRUE
  
  
  
  tuples are used as keys in dictionaries but not lists
  and optimzation.
  
  python converts the comma seperated values as tuple by default
  
  
  
  
  
  $$$$ unpacking
  
  x,y=(1,2)
  print(x)    # 1
  
  
  t=(1,2,3)
  for x in enumerate(t):
    print(x)
  
  for x,y in enumerate(t):
    print(x,y)
    
 print(1 in t)   TRue
 
 
 
 
 $$$dictionaries
 
 d=dict([(1,2),(3,4),("vani",3)])
 print(d)    >   1:2
                 3:4
                 "vani":3
                 
                 
                 
                 
                 
                 
 47 ### Find the duplicate.
Take as input N, the size of an array. Take N more inputs and store them into the array.
Inputs must contain numbers from 0 to N - 2.

Each number is present at least once.
That is, if N = 5, numbers from 0 to 3 are present in the given array at least once and one number is present twice.

You need to find and return that duplicate number present in the array.
Assume that the duplicate number is always present in the array.

from collections import Counter


n=int(input())
l=[]
for i in range(n):
    x=int(input())
    l.append(x)
d=Counter(l)
for i in range(n):
    if d[i]==2:
        print(i)
        
        
        
48 ### Maximum frequency character.
Take as input S, a string. Write a function that returns the character with maximum frequency. Print the value returned.
Input
aaabacb
Output
a



from collections import Counter


n=input()
l=list(n)
d=Counter(l)
# print(max(d.values()))
v = list(d.values())
  
# taking list of car keys in v
k = list(d.keys())
  
print(k[v.index(max(v))])






$$$$$$ dictionaries comprehension
d={x:x**2 for i in range(1,10)}


d.keys()
d.values()
d.items() gives pair of key and value as a tuple

for k,v in d.items()
  print(k,v)
  
print("vani" in d)   > False
print(d.get("ramu")) prints none if no key exits with ramu name
print(d["ramu"]) gives error when ramu key doesnt exists




$$$$$$$$JSON  javascript object notation --- web API(google maps, uber  , cred card etc)






$$$$$$$   sets $$$$
unique elements
s={} empty set is same as dict .python gets confused. instead use s= set()
no indexes in set
ordering does not matter

print({1,2}=={2,1})  True



sentence= be the change that you wish to see in the world
words=sentence.split()
uniquewords=set(words)
print(unique)


a={1,2,3,4}
b={2,4,5,6}
print(b.issuperset(a)) > true
print(a.issubset(b))   > true
print(a.union(b))   > or
print(a.intersection(b))  > and
print(a.difference(b)) removes a elements that are present in b   > -
print(a.symmetric_difference(b))     > xor  area of a, b circles other than intersection part
